diff -up vte-0.25.1/src/vte.c.fullscreen-redraw vte-0.25.1/src/vte.c
--- vte-0.25.1/src/vte.c.fullscreen-redraw	2010-06-14 08:14:33.714044371 -0400
+++ vte-0.25.1/src/vte.c	2010-06-14 08:17:01.835762650 -0400
@@ -10475,33 +10475,6 @@ vte_terminal_paint_area (VteTerminal *te
 			row * height + terminal->pvt->inner_border.top,
 			(col_stop - col) * width,
 			(row_stop - row) * height);
-	if (!GTK_WIDGET_DOUBLE_BUFFERED (terminal) ||
-			_vte_draw_requires_clear (terminal->pvt->draw)) {
-		GdkRectangle rect;
-
-		/* expand clear area to cover borders */
-		if (col == 0)
-			rect.x = 0;
-		else
-			rect.x = area->x;
-		if (col_stop == terminal->column_count)
-			rect.width = terminal->widget.allocation.width;
-		else
-			rect.width = area->x + area->width;
-		rect.width -= rect.x;
-		if (row == 0)
-			rect.y = 0;
-		else
-			rect.y = area->y;
-		if (row_stop == terminal->row_count)
-			rect.height = terminal->widget.allocation.height;
-		else
-			rect.height = area->y + area->height;
-		rect.height -= rect.y;
-
-		_vte_draw_clear (terminal->pvt->draw,
-				rect.x, rect.y, rect.width, rect.height);
-	}
 
 	/* Now we're ready to draw the text.  Iterate over the rows we
 	 * need to draw. */
@@ -10776,28 +10749,28 @@ vte_terminal_paint(GtkWidget *widget, Gd
 				clip.x, clip.y, clip.width, clip.height);
 	}
 
+        _vte_draw_clip(terminal->pvt->draw, region);
+        _vte_draw_clear (terminal->pvt->draw, 0, 0, terminal->widget.allocation.width, terminal->widget.allocation.height);
+
 	/* Calculate the bounding rectangle. */
-	if (!_vte_draw_clip(terminal->pvt->draw, region)) {
-		vte_terminal_paint_area (terminal,
-				&terminal->widget.allocation);
-	} else {
+	{
 		GdkRectangle *rectangles;
 		gint n, n_rectangles;
 		gdk_region_get_rectangles (region, &rectangles, &n_rectangles);
 		/* don't bother to enlarge an invalidate all */
 		if (!(n_rectangles == 1
-				&& rectangles[0].width == terminal->widget.allocation.width
-				&& rectangles[0].height == terminal->widget.allocation.height)) {
+			&& rectangles[0].width == terminal->widget.allocation.width
+			&& rectangles[0].height == terminal->widget.allocation.height)) {
 			GdkRegion *rr = gdk_region_new ();
-			/* convert pixels into cells */
+			/* convert pixels into whole cells */
 			for (n = 0; n < n_rectangles; n++) {
-				vte_terminal_expand_region (
-						terminal, rr, rectangles + n);
+				vte_terminal_expand_region (terminal, rr, rectangles + n);
 			}
 			g_free (rectangles);
 			gdk_region_get_rectangles (rr, &rectangles, &n_rectangles);
 			gdk_region_destroy (rr);
 		}
+
 		/* and now paint them */
 		for (n = 0; n < n_rectangles; n++) {
 			vte_terminal_paint_area (terminal, rectangles + n);
diff -up vte-0.25.1/src/vtedraw.c.fullscreen-redraw vte-0.25.1/src/vtedraw.c
--- vte-0.25.1/src/vtedraw.c.fullscreen-redraw	2010-06-14 08:17:13.939014828 -0400
+++ vte-0.25.1/src/vtedraw.c	2010-06-14 08:18:25.895765002 -0400
@@ -790,8 +790,6 @@ struct _vte_draw {
 
 	gint started;
 
-	gboolean requires_clear;
-
 	struct font_info *font;
 	struct font_info *font_bold;
 	cairo_pattern_t *bg_pattern;
@@ -807,7 +805,6 @@ _vte_draw_new (GtkWidget *widget)
 	/* Create the structure. */
 	draw = g_slice_new0 (struct _vte_draw);
 	draw->widget = g_object_ref (widget);
-	draw->requires_clear = FALSE;
 
 	_vte_debug_print (VTE_DEBUG_DRAW, "draw_new\n");
 
@@ -873,8 +870,6 @@ _vte_draw_set_background_solid(struct _v
 			       double blue,
 			       double opacity)
 {
-	draw->requires_clear = opacity != 0xFFFF;
-
 	if (draw->bg_pattern)
 		cairo_pattern_destroy (draw->bg_pattern);
 
@@ -894,9 +889,6 @@ _vte_draw_set_background_image (struct _
 {
 	cairo_surface_t *surface;
 
-	if (type != VTE_BG_SOURCE_NONE)
-		draw->requires_clear = TRUE;
-
 	/* Need a valid draw->cr for cairo_get_target () */
 	_vte_draw_start (draw);
 
@@ -934,14 +926,12 @@ _vte_draw_set_background_scroll (struct 
 	cairo_pattern_set_matrix (draw->bg_pattern, &matrix);
 }
 
-gboolean
+void
 _vte_draw_clip (struct _vte_draw *draw, GdkRegion *region)
 {
 	_vte_debug_print (VTE_DEBUG_DRAW, "draw_clip\n");
 	gdk_cairo_region(draw->cr, region);
 	cairo_clip (draw->cr);
-
-	return TRUE;
 }
 
 void
@@ -1212,9 +1202,3 @@ _vte_draw_fill_rectangle (struct _vte_dr
 	set_source_color_alpha (draw->cr, color, alpha);
 	cairo_fill (draw->cr);
 }
-
-gboolean
-_vte_draw_requires_clear (struct _vte_draw *draw)
-{
-	return draw->requires_clear;
-}
diff -up vte-0.25.1/src/vtedraw.h.fullscreen-redraw vte-0.25.1/src/vtedraw.h
--- vte-0.25.1/src/vtedraw.h.fullscreen-redraw	2010-06-14 08:18:35.458791610 -0400
+++ vte-0.25.1/src/vtedraw.h	2010-06-14 08:18:48.693764934 -0400
@@ -82,8 +82,7 @@ void _vte_draw_set_background_image(stru
 void _vte_draw_set_background_scroll(struct _vte_draw *draw,
 				     gint x, gint y);
 
-gboolean _vte_draw_clip(struct _vte_draw *draw, GdkRegion *region);
-gboolean _vte_draw_requires_clear (struct _vte_draw *draw);
+void _vte_draw_clip(struct _vte_draw *draw, GdkRegion *region);
 void _vte_draw_clear(struct _vte_draw *draw,
 		     gint x, gint y, gint width, gint height);
 
